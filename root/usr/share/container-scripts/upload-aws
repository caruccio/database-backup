#!/usr/bin/env python3

from __future__ import print_function
import sys, os

assert len(sys.argv) > 1
stdin = os.fdopen(sys.stdin.fileno(), 'rb', 0)

try:
    import boto3

    AWS_S3_BUCKET_NAME = os.environ['AWS_S3_BUCKET_NAME']
    AWS_REGION = os.environ['AWS_REGION']
    AWS_OBJECT_NAME = sys.argv[1]
    total_sent = 0

    s3 = boto3.client('s3')

    try:
        boto3.resource('s3').Bucket(AWS_S3_BUCKET_NAME)
    except:
        s3.create_bucket(
            ACL='private',
            Bucket=AWS_S3_BUCKET_NAME,
            CreateBucketConfiguration={'LocationConstraint': AWS_REGION})

    def progress_callback(current):
        global total_sent
        total_sent = total_sent + current

    s3.upload_fileobj(
            stdin,
            Bucket=AWS_S3_BUCKET_NAME,
            Key=AWS_OBJECT_NAME,
            Callback=progress_callback)

    print('--> Sent', total_sent, 'bytes')
    sys.exit(1 if total_sent == 0 else 0)
except Exception as ex:
    print('ERROR: upload-aws: {}: {}'.format(ex.__class__.__name__, ex), file=sys.stderr)
    import traceback
    traceback.print_exc()
    sys.exit(2)
